<?php
setlocale(LC_ALL,'en_US.UTF-8');

//Resctrictions of the paths allowed
$tmp = realpath($_REQUEST['file']);
	if($tmp === false)
		err(404,'File or Directory Not Found');
	if(substr($tmp, 0,strlen($tmp)) !== $tmp)
		err(403,"Forbidden");

if(substr($_REQUEST['file'], 0, 14 ) == '/var/log/nginx'){
	$file = $_REQUEST['file'] ?: '/var/log/nginx';
} elseif(substr($_REQUEST['file'], 0, 7) == 'var/log'){
        $file = $_REQUEST['file'] ?: 'var/log';
} elseif(substr($_REQUEST['file'], 0, 10) == 'var/report'){
	$file = $_REQUEST['file'] ?: 'var/report';
} else{
	$file = '';
}

//Directory scans
if($_GET['do'] == 'list') {
	if (is_dir($file)) {
		$directory = $file;
		$result = array();
		$files = array_diff(scandir($directory), array('.', '..'));

		foreach($files as $entry) if($entry !== basename(__FILE__)) {
			$i = $directory . '/' . $entry;
			$stat = stat($i);
			$result[] = array(
				'mtime' => $stat['mtime'],
				'size' => $stat['size'],
				'name' => basename($i),
				'path' => preg_replace('@^\./@', '', $i),
				'is_dir' => is_dir($i),
				'is_readable' => is_readable($i),
				'is_writable' => is_writable($i),
				'is_executable' => is_executable($i)
			);
		}
	} else {
		err(412,"Not a Directory Or Forbidden");
	}

	echo json_encode(array('success' => true, 'is_writable' => is_writable($file), 'results' =>$result));
	exit;

//Download of actual files, we do not compress anything in nginx dir as we may not have write privs there
} elseif ($_GET['do'] == 'download') {
        if(substr($file, 0, 14) !== '/var/log/nginx' && substr($file, strlen($file) - 3) !== '.gz'){
		$filename = basename($file).'.gz';
		//Compress file
		$download = gzCompressFile($file);
		$delete_dl = true;
	} else {
		$filename = basename($file);
		$download = $file;
	}
	header('Content-Type: ' . mime_content_type($file));
	header('Content-Length: '. filesize($file));
	header('Set-Cookie: fileDownload=true; path=/');
	header(sprintf('Content-Disposition: attachment; filename=%s',
	strpos('MSIE',$_SERVER['HTTP_REFERER']) ? rawurlencode($filename) : "\"$filename\"" ));
	ob_flush();
	readfile($download);
	//cleanup gzipped file if any
	$delete_dl == true ? unlink($download) : null;
	exit;
} elseif (isset($_GET['logout'])) {
	$adminSession = Mage::getSingleton('admin/session');
	$adminSession->unsetAll();
	$adminSession->getCookie()->delete($adminSession->getSessionName());
	header('Location: /logcamp');
}

function err($code,$msg) {
	echo json_encode(array('error' => array('code'=>intval($code), 'msg' => $msg)));
	exit;
}

function asBytes($ini_v) {
	$ini_v = trim($ini_v);
	$s = array('g'=> 1<<30, 'm' => 1<<20, 'k' => 1<<10);
	return intval($ini_v) * ($s[strtolower(substr($ini_v,-1))] ?: 1);
}

//Gzip compress file if called
function gzCompressFile($source, $level = 6){ 
    $dest = $source . '.gz'; 
    $mode = 'wb' . $level; 
    $error = false; 
    if ($fp_out = gzopen($dest, $mode)) { 
        if ($fp_in = fopen($source,'rb')) { 
            while (!feof($fp_in)) 
                gzwrite($fp_out, fread($fp_in, 1024 * 512)); 
            fclose($fp_in); 
        } else {
            $error = true; 
        }
        gzclose($fp_out); 
    } else {
        $error = true; 
    }
    if ($error)
        return false; 
    else
        return $dest; 
}

?>

<!DOCTYPE html
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<link href="https://redbox-logcamp-assets-2016.s3-eu-west-1.amazonaws.com/style.css" rel="stylesheet" type="text/css" />
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.2/jquery-ui.min.js"></script>
<link href="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.2/themes/ui-lightness/jquery-ui.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="https://redbox-logcamp-assets-2016.s3-eu-west-1.amazonaws.com/fileDownloader.js"></script>

<script>
//Main JS to load the table with data
(function($){
$.fn.tablesorter = function() {
	var $table = this;
	this.find('th').click(function() {
		var idx = $(this).index();
		var direction = $(this).hasClass('sort_asc');
		$table.tablesortby(idx,direction);
	});
	return this;
};

$.fn.tablesortby = function(idx,direction) {
	var $rows = this.find('tbody tr');
	function elementToVal(a) {
		var $a_elem = $(a).find('td:nth-child('+(idx+1)+')');
		var a_val = $a_elem.attr('data-sort') || $a_elem.text();
		return (a_val == parseInt(a_val) ? parseInt(a_val) : a_val);
	}

	$rows.sort(function(a,b){
	var a_val = elementToVal(a), b_val = elementToVal(b);
	return (a_val > b_val ? 1 : (a_val == b_val ? 0 : -1)) * (direction ? 1 : -1);
	})

	this.find('th').removeClass('sort_asc sort_desc');
	$(this).find('thead th:nth-child('+(idx+1)+')').addClass(direction ? 'sort_desc' : 'sort_asc');
	for(var i =0;i<$rows.length;i++)
		this.append($rows[i]);
		this.settablesortmarkers();
		return this;
}

$.fn.retablesort = function() {
	var $e = this.find('thead th.sort_asc, thead th.sort_desc');
	if($e.length)
		this.tablesortby($e.index(), $e.hasClass('sort_desc') );
	return this;
}

$.fn.settablesortmarkers = function() {
	this.find('thead th span.indicator').remove();
	this.find('thead th.sort_asc').append('<span class="indicator">&darr;<span>');
	this.find('thead th.sort_desc').append('<span class="indicator">&uarr;<span>');
	return this;
}
})(jQuery);

$(function(){
	var XSRF = (document.cookie.match('(^|; )_sfm_xsrf=([^;]*)')||0)[2];
	var $tbody = $('#list');
	$(window).bind('hashchange',list).trigger('hashchange');
	$('#table').tablesorter();

function list() {
	var hashval = window.location.hash.substr(1);
	$.get('?',{'do':'list','file':hashval},function(data) {
	$tbody.empty();
	$('#breadcrumb').empty().html(renderBreadcrumbs(hashval));
	if(data.success) {
	$.each(data.results,function(k,v){
	$tbody.append(renderFileRow(v));
});

!data.results.length && $tbody.append('<tr><td class="empty" colspan=5>This folder is empty</td></tr>')
data.is_writable ? $('body').removeClass('no_write') : $('body').addClass('no_write');
} else {
console.warn(data.error.msg);
    $tbody.append('<tr><td class="empty" colspan=5>This folder is Forbidden</td></tr>')
}
$('#table').retablesort();
},'json');
}

function renderFileRow(data) {
	var $link = $('<a class="fileDownloadSimpleRichExperience">')
	.attr('href', data.is_dir ? '#' + data.path : '?do=download&file='+encodeURIComponent(data.path))
	.text(data.name);
	var perms = [];
	if(data.is_readable) perms.push('read');
	if(data.is_writable) perms.push('write');
	if(data.is_executable) perms.push('exec');
	var $html = $('<tr />')
	.addClass(data.is_dir ? 'is_dir' : '')
	.append( $('<td class="first" />').append($link) )
	.append( $('<td/>').attr('data-sort',data.is_dir ? -1 : data.size)
	.html($('<span class="size" />').text(formatFileSize(data.size))) ) 
	.append( $('<td/>').attr('data-sort',data.mtime).text(formatTimestamp(data.mtime)) )
	.append( $('<td/>').text(perms.join('+')) )
	return $html;
}

function renderBreadcrumbs(path) {
        if (path.toLowerCase().indexOf("nginx") >= 0) {
		var hashStart = '#/';
                var logName = 'NGINX';
		var base = "var/log/",
                $html = $('<div/>').append( $('<a href=#/var/log/nginx><b>'+logName+'</b></a></div>') );
		$.each(path.split('/'),function(k,v){
                        if(v !== 'var' && v !== 'log' && v !== '') {
                                $html.append( $('<span/>').text(' ▸ ') )
                                .append( $('<a/>').attr('href', hashStart+base+v).text(v));
                                base += v + '/';
                        }
                });
		return $html;
        } else {
		var hashStart = '#';
                var logName = 'MAGENTO';
                var base = "",
        	$html = $('<div/>').append( $('<a href=#var><b>'+logName+'</b></a></div>') );
        	$.each(path.split('/'),function(k,v){
                	if(v) {
                        	$html.append( $('<span/>').text(' ▸ ') )
                        	.append( $('<a/>').attr('href', hashStart+base+v).text(v));
                        	base += v + '/';
                	}
        	});
        	return $html;
        }
}

function formatTimestamp(unix_timestamp) {
	var m = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
	var d = new Date(unix_timestamp*1000);
	return [m[d.getMonth()],' ',d.getDate(),', ',d.getFullYear()," ",
		(d.getHours() % 12 || 12),":",(d.getMinutes() < 10 ? '0' : '')+d.getMinutes(),
		" ",d.getHours() >= 12 ? 'PM' : 'AM'].join('');
}

function formatFileSize(bytes) {
	var s = ['bytes', 'KB','MB','GB','TB','PB','EB'];
	for(var pos = 0;bytes >= 1000; pos++,bytes /= 1024);
	var d = Math.round(bytes*10);
	return pos ? [parseInt(d/10),".",d%10," ",s[pos]].join('') : bytes + ' bytes';
	}
})

</script>
</head><body>
	<div id="top">
		<img src="https://redbox-logcamp-assets-2016.s3-eu-west-1.amazonaws.com/logo.jpg" alt="Redbox Logo">
		<br>
		<div id="breadcrumb"></div>
		<div id="logout"><a href="<?php $_SERVER['SERVER_NAME'] ?>/logcamp/home?logout"><button type="button">Logout</button></a></div>
		<div id="nginx"><a href="<?php $_SERVER['SERVER_NAME'] ?>/logcamp/home#/var/log/nginx"><button type="button">Nginx Logs</button></a></div>
		<div id="magento"><a href="<?php $_SERVER['SERVER_NAME'] ?>/logcamp/home#var/report"><button type="button">Magento Reports</button></a></div>
		<div id="magento"><a href="<?php $_SERVER['SERVER_NAME'] ?>/logcamp/home#var/log"><button type="button">Magento Logs</button></a></div>
	</div>

	<table id="table"><thead><tr>
		<th>Name</th>
		<th>Size</th>
		<th>Modified</th>
		<th>Permissions</th>
		</tr></thead><tbody id="list">
	</tbody></table>
	
	<footer>Simple Magento Log Portal | <a href="http://www.redboxdigital.com/" target="_blank">Redbox Digital Limited</a></footer>
	<div id="preparing-file-modal" title="Preparing Download..." style="display: none;">
    	Please be patient, certain files are Gzipped before downloading.
	</div>
	<div id="error-modal" title="Error" style="display: none;">
    	There was a problem generating your download, please try again.
	</div>
</body>

<script>
//JS to handle filedownloads on the client side for AJAX like downloads
$(function () {
$(document).on("click", "a.fileDownloadSimpleRichExperience", function (e) {
	e.preventDefault();
	var $preparingFileModal = $("#preparing-file-modal");

	if($(this).attr('href').indexOf('#') >= 0 ){
		window.location.href = $(this).attr('href');
	} else {

		$preparingFileModal.dialog({ modal: true, dialogClass: "no-close" });	

		$.fileDownload($(this).prop('href'), {
			successCallback: function (url) {
				$preparingFileModal.dialog('close');
			},
			failCallback: function (responseHtml, url) {
				$preparingFileModal.dialog('close');
				$("#error-modal").dialog({ modal: true });
			}
		});
	}
	return false;
});
});
</script>
</html>
